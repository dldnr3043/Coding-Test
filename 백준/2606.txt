import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.Scanner;

public class Main {
	
	static int answer = 0;
	static boolean[] visited;
	
	public static void main(String[] args) throws IOException {
		Scanner scan = new Scanner(System.in);
		
		int computers = scan.nextInt();
		int[][] array = new int[computers][computers];
		visited = new boolean[computers];
		
		int n = scan.nextInt();
		int [][] network = new int[n][2];
		
		for(int i=0;i<n;i++)
			for(int j=0;j<2;j++)
				network[i][j] = scan.nextInt();
		
		for(int i=0;i<computers;i++) {
			array[i][i] = 1;
		}
			
		
		for(int i=0;i<n;i++)
			array[network[i][0]-1][network[i][1]-1] = array[network[i][1]-1][network[i][0]-1] = 1;
		
		DFS(0, computers, array);
		
		System.out.print(answer);
	}
	
	public static void DFS(int start, int n, int[][] array) {
		
		visited[start] = true;
		
		for(int i=0;i<n;i++) {
			if(array[start][i] == 1 && !visited[i]) {
				visited[i] = true;
				DFS(i, n, array);
				answer++;
			}
		}
	}
}
